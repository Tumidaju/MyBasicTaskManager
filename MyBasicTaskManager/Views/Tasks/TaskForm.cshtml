@model MyBasicTaskManager.Models.TaskFormViewModel
@using (Html.BeginForm("TaskForm", "Tasks", FormMethod.Post))
{
    @Html.AntiForgeryToken();
    @Html.ValidationSummary(true);
    @Html.HiddenFor(model => model.Task.Id)
    @Html.HiddenFor(model => model.IsExisting)
    <div class="row mt-4 mb-4">
        <div class="col-4">
            <div class="form-gorup">
                @Html.LabelFor(model => model.Task.Name, new { @class = "", @for = "Name" })
                @Html.TextBoxFor(model => model.Task.Name, new { @class = "form-control", @placeholder = "", @id = "Name" })
                @Html.ValidationMessageFor(model => model.Task.Name)
            </div>
        </div>
        <div class="col-4">
            <div class="form-gorup">
                @Html.LabelFor(model => model.Task.Rank, new { @class = "", @for = "Rank" })
                @Html.DropDownListFor(model => model.Task.Rank, Model.RankList, new { @class = "form-control", @placeholder = "", @id = "Rank" })
                @Html.ValidationMessageFor(model => model.Task.Rank)
            </div>
        </div>
        <div class="col-4">
            <div class="form-gorup">
                @Html.LabelFor(model => model.Task.Status, new { @class = "", @for = "Status" })
                @Html.DropDownListFor(model => model.Task.Status, Model.StatusList, new { @class = "form-control", @placeholder = "", @id = "Status" })
                @Html.ValidationMessageFor(model => model.Task.Status)
            </div>
        </div>
    </div>
    <div class="row mb-4">
        <div class="col-4">
            <div class="form-gorup">
                @Html.LabelFor(model => model.Task.Description, new { @class = "", @for = "Description" })
                @Html.TextBoxFor(model => model.Task.Description, new { @class = "form-control", @placeholder = "", @id = "Description" })
                @Html.ValidationMessageFor(model => model.Task.Description)
            </div>
        </div>
        <div class="col-4">
            <div class="form-gorup">
                @Html.LabelFor(model => model.Task.CardColor, new { @class = "", @for = "CardColor" })
                @Html.TextBoxFor(model => model.Task.CardColor, new { @class = "form-control", @placeholder = "", @id = "CardColor", type = "color" })
                @Html.ValidationMessageFor(model => model.Task.CardColor)
            </div>
        </div>
        <div class="col-4">
            @Html.LabelFor(model => model.Task.Progres, new { @class = "", @for = "Progress" })
            @Html.TextBoxFor(model => model.Task.Progres, new { @class = "form-control", @placeholder = "", @id = "Progress", type = "numeric", @min = "0", @max = "100" })
            @Html.ValidationMessageFor(model => model.Task.Progres)
        </div>
    </div>
    <div class="row mb-4">
        <div class="col-4">
            <div class="form-gorup">
                @Html.LabelFor(model => model.Task.Category, new { @class = "", @for = "Category" })
                @Html.DropDownListFor(model => model.Task.Category, Model.CategoryList, new { @class = "form-control", @placeholder = "", @id = "Category" })
                @Html.ValidationMessageFor(model => model.Task.Category)
            </div>
        </div>
        <div class="col-4">
            <div class="form-gorup">
                @Html.LabelFor(model => model.Task.FontColor, new { @class = "", @for = "FontColor" })
                @Html.TextBoxFor(model => model.Task.FontColor, new { @class = "form-control", @placeholder = "", @id = "FontColor", type = "color" })
                @Html.ValidationMessageFor(model => model.Task.FontColor)
            </div>

        </div>
        <div class="col-4">
            @Html.LabelFor(model => model.Task.DeadlineDate, new { @class = "", @for = "DeadlineDate" })
            @Html.TextBoxFor(model => model.Task.DeadlineDate, new { @class = "form-control", @placeholder = "", @id = "DeadlineDate", type = "date" })
            @Html.ValidationMessageFor(model => model.Task.DeadlineDate)
        </div>
    </div>
    <div class="row">
        <div class="col align-self-end" style="text-align: right;">
            @Html.ActionLink("Back", "Index", "Tasks", routeValues: new { }, htmlAttributes: new { @class = "btn btn-outline-secondary" })
            <button type="submit" class="btn btn-outline-secondary add">Save</button>
        </div>
    </div>
}
<script>
    $(function () {
        $("#Category").append('<option value=\'Null\'>Uncategorized</option>');
        if (@Model.IsExisting.ToString().ToLower()) {
            $("#Status").val(@Model.Task.Status).change();
            $("#Rank").val(@Model.Task.Rank).change();
            if("@Model.Task.Category"!="")
                $("#Category").val(@Model.Task.Category).change();
            else
                $("#Category").val('Null').change();
            @{ 
                var date = "";
                if (@Model.Task.DeadlineDate.HasValue)
                {
                    date = @Model.Task.DeadlineDate.Value.ToString("yyyy-MM-dd");
                }                
            }
            $("#DeadlineDate").val("@date");
        }
    });
</script>
