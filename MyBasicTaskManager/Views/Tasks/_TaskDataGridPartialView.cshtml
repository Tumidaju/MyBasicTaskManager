@model List<MyBasicTaskManager.Models.TaskViewModel>
<div class="row">
    <div class="col-12">
        <table id="grid-data" class="table table-condensed table-hover table-striped">
            <thead>
                <tr>
                    <th data-column-id="Id" data-type="numeric">ID</th>
                    <th data-column-id="Category">Category</th>
                    <th data-column-id="Name">Name</th>
                    <th data-column-id="Description">Description</th>
                    <th data-column-id="Rank">Priority</th>
                    <th data-column-id="Status">Status</th>
                    <th data-column-id="CreationDate">Creation date</th>
                    <th data-column-id="EditDate">Last edit date</th>
                    <th data-column-id="ComletedDate">Date of completion</th>
                    <th data-column-id="DeadlineDate">Deadline</th>
                    <th data-column-id="progres" data-formatter="progres" data-sortable="false">Progres</th>
                    <th data-column-id="link" data-sortable="false">Options</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var task in Model)
                {
                    string color = "red";
                    if (task.DeadlineDate > DateTime.Now)
                    {
                        color = "green";
                    }
                    <tr>
                        <td>@task.Id</td>
                        <td><span class="badge badge-secondary" style="color:#6c757d;background-color:transparent;border:2px solid @task.Category.Color;font-size: 1em;">@task.Category.Name</span></td>
                        <td><span class="@task.Name">@task.Name</span></td>
                        <td>
                            @if (@task.Description.Length > 50)
                            {
                                @task.Description.Substring(0, 50)
                                <span>"..."</span>
                            }
                            else
                            {
                                @task.Description
                            }
                        </td>
                        <td><span class="badge badge-secondary" style="color:#6c757d;background-color:transparent;border:2px solid @task.Rank.Color;font-size: 1em;">@task.Rank.Name</span></td>
                        <td><span class="badge badge-secondary" style="color:#6c757d;background-color:transparent;border:2px solid @task.Status.Color;font-size: 1em;">@task.Status.Name</span></td>
                        <td>@task.CreationDate</td>
                        <td>@task.EditDate</td>
                        <td>@task.CompletionDate</td>
                        <td><span class="badge badge-secondary" style="color:#6c757d;background-color:transparent;border:2px solid @color;font-size: 1em;">@task.DeadlineDate.ToString()</span></td>
                        <td>
                            <div class="progress">
                                <div class="progress-bar progress-bar-striped" role="progressbar" style="width: @task.Progres%;background-color:@task.Category.Color;" aria-valuenow="@task.Progres" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                        </td>
                        <td>
                            <button type="button" class="btn btn-outline-secondary viewFullTask" onclick="ShowPreview(@task.Id)">View</button>
                            @Html.ActionLink("Edit", "TaskForm", "Tasks", routeValues: new { IsExisting = true, Id = task.Id }, htmlAttributes: new { @class = "btn btn-outline-secondary" })
                            @Html.ActionLink("Delete", "DeleteTask", "Tasks", routeValues: new { Id = task.Id }, htmlAttributes: new { @class = "btn btn-outline-secondary" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<script>
    $(function () {
        $("#grid-data").bootgrid({
            formatters: {
                "link": function (column, row) {
                    return "<a href=\"#\">" + column.id + ": " + row.id + "</a>";
                }
            }
        });
    });
</script>