@model List<MyBasicTaskManager.Models.TaskViewModel>
<div class="row" style="margin-top:20px;">
    <div class="col-12 col-sm-6 col-md-3 col-lg-3 sectionKanban">
        <h5 style="text-align:center">Backlog</h5>
        <hr />
        <div class="row backlog">
            @foreach (var task in Model.OrderBy(o => o.Rank.Id).ToList())
            {
                if (task.Status.Id == 1)
                {
                    <div class="col-12" style="margin-top:10px;margin-bottom:10px;">
                        <div class="card" style="width: 100%;border-color:@task.CardColor !important;">
                            <div class="card-body">
                                <h5 class="card-title" style="color:@task.FontColor !important;">@task.Name</h5>
                                <h6 class="card-subtitle mb-2 text-muted"><span class="badge badge-secondary" style="color:#6c757d;background-color:transparent;border:2px solid @task.Rank.Color;font-size: 1em;">@task.Rank.Name</span></h6>
                                <p class="card-text" style="color:@task.FontColor !important;">
                                    @if (@task.Description.Length > 100)
                                    {
                                        @task.Description.Substring(0, 100)
                                        <span>"..."</span>
                                    }
                                    else
                                    {
                                        @task.Description
                                    }
                                </p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="btn-group">
                                        <button type="button" class="btn btn-sm btn-outline-secondary viewFullTask" onclick="ShowPreview(@task.Id)">View</button>
                                        @Html.ActionLink("Edit", "TaskForm", "Tasks", routeValues: new { IsExisting = true, Id = task.Id }, htmlAttributes: new { @class = "btn btn-sm btn-outline-secondary" })
                                        @Html.ActionLink("Delete", "DeleteTask", "Tasks", routeValues: new { Id = task.Id }, htmlAttributes: new { @class = "btn btn-sm btn-outline-secondary" })
                                    </div>
                                    
                                    <small class="text-muted">Created: @task.CreationDate.ToShortDateString()</small>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
    <div class="col-12 col-sm-6 col-md-3 col-lg-3 sectionKanban">
        <h5 style="text-align:center">To do</h5>
        <hr />
        <div class="row backlog">
            @foreach (var task in Model)
            {
                if (task.Status.Id == 2)
                {
                    <div class="col-12" style="margin-top:10px;margin-bottom:10px;">
                        <div class="card" style="width: 100%;border-color:@task.CardColor !important;">
                            <div class="card-body">
                                <h5 class="card-title" style="color:@task.FontColor !important;">@task.Name</h5>
                                <h6 class="card-subtitle mb-2 text-muted"><span class="badge badge-secondary" style="color:#6c757d;background-color:transparent;border:2px solid @task.Rank.Color;font-size: 1em;">@task.Rank.Name</span></h6>
                                <p class="card-text" style="color:@task.FontColor !important;">
                                    @if (@task.Description.Length > 100)
                                    {
                                        @task.Description.Substring(0, 100)
                                        <span>"..."</span>
                                    }
                                    else
                                    {
                                        @task.Description
                                    }
                                </p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="btn-group">
                                        <button type="button" class="btn btn-sm btn-outline-secondary viewFullTask" onclick="ShowPreview(@task.Id)" >View</button>
                                        @Html.ActionLink("Edit", "TaskForm", "Tasks", routeValues: new { IsExisting = true, Id = task.Id }, htmlAttributes: new { @class = "btn btn-sm btn-outline-secondary" })
                                        @Html.ActionLink("Delete", "DeleteTask", "Tasks", routeValues: new { Id = task.Id }, htmlAttributes: new { @class = "btn btn-sm btn-outline-secondary" })
                                    </div>

                                    <small class="text-muted">Created: @task.CreationDate.ToShortDateString()</small>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
    <div class="col-12 col-sm-6 col-md-3 col-lg-3 sectionKanban">
        <h5 style="text-align:center">In Progres</h5>
        <hr />
        <div class="row backlog">
            @foreach (var task in Model)
            {
                if (task.Status.Id == 3)
                {
                    <div class="col-12" style="margin-top:10px;margin-bottom:10px;">
                        <div class="card" style="width: 100%;border-color:@task.CardColor !important;">
                            <div class="card-body">
                                <h5 class="card-title" style="color:@task.FontColor !important;">@task.Name</h5>
                                <h6 class="card-subtitle mb-2 text-muted"><span class="badge badge-secondary" style="color:#6c757d;background-color:transparent;border:2px solid @task.Rank.Color;font-size: 1em;">@task.Rank.Name</span></h6>
                                <p class="card-text" style="color:@task.FontColor !important;">
                                    @if (@task.Description.Length > 100)
                                    {
                                        @task.Description.Substring(0, 100)
                                        <span>"..."</span>
                                    }
                                    else
                                    {
                                        @task.Description
                                    }
                                </p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="btn-group">
                                        <button type="button" class="btn btn-sm btn-outline-secondary viewFullTask"  onclick="ShowPreview(@task.Id)">View</button>
                                        @Html.ActionLink("Edit", "TaskForm", "Tasks", routeValues: new { IsExisting = true, Id = task.Id }, htmlAttributes: new { @class = "btn btn-sm btn-outline-secondary" })
                                        @Html.ActionLink("Delete", "DeleteTask", "Tasks", routeValues: new { Id = task.Id }, htmlAttributes: new { @class = "btn btn-sm btn-outline-secondary" })
                                    </div>

                                    <small class="text-muted">Created: @task.CreationDate.ToShortDateString()</small>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
    <div class="col-12 col-sm-6 col-md-3 col-lg-3 sectionKanban">
        <h5 style="text-align:center">Done</h5>
        <hr />
        <div class="row backlog">
            @foreach (var task in Model)
            {
                if (task.Status.Id == 4)
                {
                    <div class="col-12" style="margin-top:10px;margin-bottom:10px;">
                        <div class="card" style="width: 100%;border-color:@task.CardColor !important;">
                            <div class="card-body">
                                <h5 class="card-title" style="color:@task.FontColor !important;">@task.Name</h5>
                                <h6 class="card-subtitle mb-2 text-muted"><span class="badge badge-secondary" style="color:#6c757d;background-color:transparent;border:2px solid @task.Rank.Color;font-size: 1em;">@task.Rank.Name</span></h6>
                                <p class="card-text" style="color:@task.FontColor !important;">
                                    @if (@task.Description.Length > 100)
                                    {
                                        @task.Description.Substring(0, 100)
                                        <span>"..."</span>
                                    }
                                    else
                                    {
                                        @task.Description
                                    }
                                </p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="btn-group">
                                        <button type="button" class="btn btn-sm btn-outline-secondary viewFullTask" onclick="ShowPreview(@task.Id)">View</button>
                                        @Html.ActionLink("Edit", "TaskForm", "Tasks", routeValues: new { IsExisting = true, Id = task.Id }, htmlAttributes: new { @class = "btn btn-sm btn-outline-secondary" })
                                        @Html.ActionLink("Delete", "DeleteTask", "Tasks", routeValues: new { Id = task.Id }, htmlAttributes: new { @class = "btn btn-sm btn-outline-secondary" })
                                    </div>

                                    <small class="text-muted">Created: @task.CreationDate.ToShortDateString()</small>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>
